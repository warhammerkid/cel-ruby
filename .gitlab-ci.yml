stages:
  - build
  - test
  - prepare
  - deploy

# Cache gems in between builds
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/ruby
    - vendor/jruby

variables:
  BUNDLE_JOBS: 10
  BUNDLE_PATH: vendor
  CI: 1
  PARALLEL: 1

.before_script: &before_script
  - ruby -v
  - bundle install

generate_conformance_protos:
  stage: build
  image: python
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
  before_script:
    - apt-get update -y
    - apt install -y protobuf-compiler
    - git clone --depth 1 https://github.com/google/cel-spec.git
    - git clone --depth 1 https://github.com/googleapis/googleapis.git
    - pip install protobuf
    - protoc -Icel-spec/proto -Igoogleapis --python_out=. cel-spec/proto/cel/expr/*.proto cel-spec/proto/cel/expr/conformance/**/*.proto googleapis/google/rpc/status.proto
  script:
    - PYTHONPATH=. python conformance/support/convert_to_proto.py
    - mv testdata/ conformance/
    # TODO: figure out issues with proto2
    - rm conformance/testdata/proto2_ext.json conformance/testdata/type_deduction.json
  artifacts:
    paths:
      - conformance/testdata

jruby:
  variables:
    JRUBY_OPTS: "--debug"
  before_script:
    - apt-get update && apt-get install -y build-essential
    - bundle install
  image: "jruby:9.4"
  script:
    - bundle exec rake test
  artifacts:
    paths:
      - coverage
truffleruby:
  before_script:
    - bundle install
  image: "ghcr.io/graalvm/truffleruby-community:latest"
  script:
    - bundle exec rake test
  allow_failure: true
ruby27:
  before_script:
    - bundle install
  image: "ruby:2.7"
  script:
    - bundle exec rake test
  artifacts:
    paths:
      - coverage
ruby30:
  before_script:
    - bundle install
    # - export RUBYOPT="-rbundler/setup -rrbs/test/setup"
    # - export RBS_TEST_RAISE="true"
    # - export RBS_TEST_LOGLEVEL="error"
    # - export RBS_TEST_OPT="-Isig"
    # - export RBS_TEST_TARGET="HTTP2Next*"
  image: "ruby:3.0"
  script:
    - bundle exec rake test
    - bundle exec rake rubocop
  artifacts:
    paths:
      - coverage
ruby31:
  before_script:
    - bundle install
    # - export RUBYOPT="-rbundler/setup -rrbs/test/setup"
    # - export RBS_TEST_RAISE="true"
    # - export RBS_TEST_LOGLEVEL="error"
    # - export RBS_TEST_OPT="-Isig"
    # - export RBS_TEST_TARGET="HTTP2Next*"
  image: "ruby:3.1"
  script:
    - bundle exec rake test
    - bundle exec rake rubocop
  artifacts:
    paths:
      - coverage
ruby32:
  before_script:
    - bundle install
    # - export RUBYOPT="-rbundler/setup -rrbs/test/setup"
    # - export RBS_TEST_RAISE="true"
    # - export RBS_TEST_LOGLEVEL="error"
    # - export RBS_TEST_OPT="-Isig"
    # - export RBS_TEST_TARGET="HTTP2Next*"
  image: "ruby:3.2"
  script:
    - bundle exec rake test
    - bundle exec rake rubocop
  artifacts:
    paths:
      - coverage
ruby33:
  before_script:
    - bundle install
    # - export RUBYOPT="-rbundler/setup -rrbs/test/setup"
    # - export RBS_TEST_RAISE="true"
    # - export RBS_TEST_LOGLEVEL="error"
    # - export RBS_TEST_OPT="-Isig"
    # - export RBS_TEST_TARGET="HTTP2Next*"
  image: "ruby:3.3"
  script:
    - bundle exec rake test
    - bundle exec rake rubocop
  artifacts:
    paths:
      - coverage
conformance:
  needs:
    - generate_conformance_protos
  variables:
    COVERAGE_KEY: "$RUBY_ENGINE-$RUBY_VERSION-conformance-tests"
  allow_failure: true
  before_script:
    - bundle install
    # - export RUBYOPT="-rbundler/setup -rrbs/test/setup"
    # - export RBS_TEST_RAISE="true"
    # - export RBS_TEST_LOGLEVEL="error"
    # - export RBS_TEST_OPT="-Isig"
    # - export RBS_TEST_TARGET="HTTP2Next*"
  image: "ruby:3.3"
  script:
    - bundle exec rake conformance
  artifacts:
    paths:
      - coverage

coverage:
  stage: prepare
  coverage: '/\(\d+.\d+\%\) covered/'
  dependencies:
    - truffleruby
    - jruby
    - ruby26
    - ruby27
    - ruby32
  image: "ruby:3.3"
  before_script:
    - gem install simplecov --no-doc
  script:
    - find coverage -name "*resultset.json" -exec sed -i 's?/home?'`pwd`'?' {} \;
    - rake coverage:report
  artifacts:
    paths:
      - "coverage/"

pages:
  stage: deploy
  needs:
    - coverage
  script:
    - mkdir public
    - mv coverage public/coverage
  only:
    - master
  artifacts:
    paths:
      - coverage/
      - public/
    expire_in: 30 days
